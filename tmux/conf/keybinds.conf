# Remap prefix
set -g prefix C-a
unbind-key C-b

# Vim keys for copy mode
setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Navigate panes with hjkl and open panes when at the edge of the screen
# Mimicing behavior of: https://github.com/mrjones2014/smart-splits.nvim
# This gives us a uniform way of navigating+opening panes in vim and tmux
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" {
  if-shell -F "#{==:#{pane_at_left},1}" "split-window -hb" "select-pane -L"
}
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" {
  if-shell -F "#{==:#{pane_at_bottom},1}" "split-window -v" "select-pane -D"
}
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" {
  if-shell -F "#{==:#{pane_at_top},1}" "split-window -vb" "select-pane -U"
}
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" {
  if-shell -F "#{==:#{pane_at_right},1}" "split-window -h" "select-pane -R"
}
bind-key -T copy-mode-vi 'C-h' if-shell -F "#{==:#{pane_at_left},1}" "split-window -hb" "select-pane -L"
bind-key -T copy-mode-vi 'C-j' if-shell -F "#{==:#{pane_at_bottom},1}" "split-window -v" "select-pane -D"
bind-key -T copy-mode-vi 'C-k' if-shell -F "#{==:#{pane_at_top},1}" "split-window -vb" "select-pane -U"
bind-key -T copy-mode-vi 'C-l' if-shell -F "#{==:#{pane_at_right},1}" "split-window -h" "select-pane -R"
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Jump to the next pane or vim split
bind-key -n C-\\ if-shell "$is_vim" 'send-keys C-w C-p' 'select-pane -l'

# Resize panes same as vim
bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

# Split panes like vim
unbind %
unbind '"'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Faster window switching
bind-key -n C-1 select-window -t1
bind-key -n C-2 select-window -t2
bind-key -n C-3 select-window -t3
bind-key -n C-4 select-window -t4
bind-key -n C-5 select-window -t5
bind-key -n C-6 select-window -t6
bind-key -n C-7 select-window -t7
bind-key -n C-8 select-window -t8
bind-key -n C-9 select-window -t9

# Reload config
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# Bind q to toggle statusbar
bind-key q set-option status

# Easier session creation
bind C-s command-prompt -p "New Session:" "new-session -A -s '%%'"
bind K confirm kill-session

# Allow next and previous to be repeated
bind-key -r n next-window
bind-key -r p previous-window

# Open window in current pane directory
bind-key C new-window -c "#{pane_current_path}"

# Set root directory for the session to the current directory
bind-key C-f attach-session -t . -c '#{pane_current_path}' \; display-message "Session directory set to #{pane_current_path}"

# Close current pane faster
bind-key x kill-pane
